[{"C:\\r-Profile\\src\\index.js":"1","C:\\r-Profile\\src\\App.js":"2","C:\\r-Profile\\src\\reportWebVitals.js":"3","C:\\r-Profile\\src\\components\\main.js":"4","C:\\r-Profile\\src\\components\\contact.js":"5","C:\\r-Profile\\src\\components\\landingpage.js":"6","C:\\r-Profile\\src\\components\\blog2.js":"7"},{"size":621,"mtime":1609289779482,"results":"8","hashOfConfig":"9"},{"size":916,"mtime":1609425120326,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":427,"mtime":1609425177203,"results":"12","hashOfConfig":"9"},{"size":2909,"mtime":1609432462268,"results":"13","hashOfConfig":"9"},{"size":2163,"mtime":1609425317218,"results":"14","hashOfConfig":"9"},{"size":4531,"mtime":1609431914126,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1vejqhq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"C:\\r-Profile\\src\\index.js",[],["33","34"],"C:\\r-Profile\\src\\App.js",[],"C:\\r-Profile\\src\\reportWebVitals.js",[],"C:\\r-Profile\\src\\components\\main.js",[],"C:\\r-Profile\\src\\components\\contact.js",[],"C:\\r-Profile\\src\\components\\landingpage.js",["35"],"import React, { Component } from 'react';\r\nimport { Cell, Grid } from 'react-mdl';\r\nimport logo2 from '../rosa2.png'\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return(\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Grid className=\"landing-grid\">\r\n                    <Cell col={12}>\r\n                    <img \r\n                        src={logo2}\r\n                        alt=\" avatar image\"\r\n                        className= \"avatar-img2\"\r\n                    />\r\n                    \r\n\r\n                    <div className=\"banner-text\">\r\n                        <h1> Web Developer</h1>\r\n\r\n                        <hr/>\r\n\r\n                        <p>HTML/ CSS | Bootstrap | JavaScript | YII2 | React | MongoDB</p>\r\n                        <div className=\"social-links\">\r\n\r\n                            {/*LinkedIn */}\r\n                            <a href=\"https://www.linkedin.com/in/rosalia-muia-6a87821a1/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                <i className=\"fab fa-linkedin\" aria-hidden=\"true\" />\r\n                            </a>\r\n\r\n                            {/* GitHub */}\r\n                            <a href=\"https://github.com/rosaliamuia\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                <i className=\"fab fa-github\" aria-hidden=\"true\" />\r\n                            </a>\r\n\r\n                            {/* GitHub */}\r\n                            <a href=\"https://twitter.com/Rosa_112233\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                <i className=\"fab fa-twitter-square\" aria-hidden=\"true\" />\r\n                            </a>\r\n\r\n                            {/* FreeCodeCamp */}\r\n                            <a href=\"https://twitter.com/Rosa_112233\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                <i className=\"fab fa-free-code-camp\" aria-hidden=\"true\" />\r\n                            </a>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    </Cell>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing;","C:\\r-Profile\\src\\components\\blog2.js",["36"],"import React from 'react';\r\nimport '../Blog2.css';\r\nimport logo from '../rosa.jpg'\r\n\r\nclass Blog2 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        newItem: \"\",\r\n        list: []\r\n      };\r\n    }\r\n  \r\n    //incorporating local storage \r\n    componentDidMount() {\r\n      this.hydrateStateWithLocalStorage();\r\n  \r\n      // add event listener to save state to localStorage\r\n      // when user leaves/refreshes the page\r\n      window.addEventListener(\r\n        \"beforeunload\",\r\n        this.saveStateToLocalStorage.bind(this)\r\n      );\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      window.removeEventListener(\r\n        \"beforeunload\",\r\n        this.saveStateToLocalStorage.bind(this)\r\n      );\r\n  \r\n      // saves if component has a chance to unmount\r\n      this.saveStateToLocalStorage();\r\n    }\r\n  \r\n    hydrateStateWithLocalStorage() {\r\n      // for all items in state\r\n      for (let key in this.state) {\r\n        // if the key exists in localStorage\r\n        if (localStorage.hasOwnProperty(key)) {\r\n          // get the key's value from localStorage\r\n          let value = localStorage.getItem(key);\r\n  \r\n          // parse the localStorage string and setState\r\n          try {\r\n            value = JSON.parse(value);\r\n            this.setState({ [key]: value });\r\n          } catch (e) {\r\n            // handle empty string\r\n            this.setState({ [key]: value });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    saveStateToLocalStorage() {\r\n      // for every item in React state\r\n      for (let key in this.state) {\r\n        // save to localStorage\r\n        localStorage.setItem(key, JSON.stringify(this.state[key]));\r\n      }\r\n    }\r\n  \r\n    updateInput(key, value) {\r\n      // update react state\r\n      this.setState({ [key]: value });\r\n    }\r\n  \r\n    addItem() {\r\n      // create a new item with unique id\r\n      const newItem = {\r\n        id: 1 + Math.random(),\r\n        value: this.state.newItem.slice()\r\n   \r\n      };\r\n  \r\n      // copy current list of items\r\n      const list = [...this.state.list];\r\n  \r\n      // add the new item to the list\r\n      list.push(newItem);\r\n  \r\n      // update state with new list, reset the new item input\r\n      this.setState({\r\n        list,\r\n        newItem: \"\"\r\n      });\r\n    }\r\n  \r\n    deleteItem(id) {\r\n      // copy current list of items\r\n      const list = [...this.state.list];\r\n      // filter out the item being deleted\r\n      const updatedList = list.filter(item => item.id !== id);\r\n  \r\n      this.setState({ list: updatedList });\r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <div>\r\n  \r\n        <h1 className=\"app-title\">HELLO THERE!</h1>\r\n        <p>\r\n          <code>I am Rosalia Kaluki Muia from Kenya. \r\n            Being a full stack developer gives me a sense of satisfaction since it has been my passion since my early teenage.\r\n            I believe people should do things which they are good at or in which there heart lays.\r\n            That's why I chose this line of field because I'm passionate about it.\r\n            My goals include:\r\n            </code>\r\n        </p>\r\n          \r\n          <div className=\"blog-landing\">\r\n          <div\r\n            style={{\r\n              padding: 30,\r\n              textAlign: \"left\",\r\n              maxWidth: 500,\r\n              margin: \"auto\"\r\n            }}\r\n          >\r\n            GOALS AND ASPIRATIONS LIST...\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Add your goal here\"\r\n              value={this.state.newItem}\r\n              onChange={e => this.updateInput(\"newItem\", e.target.value)}\r\n            />\r\n            <button\r\n              className=\"add-btn btn-floating\"\r\n              onClick={() => this.addItem()}\r\n              disabled={!this.state.newItem.length}\r\n            >\r\n               <i class=\"material-icons\"> + </i>\r\n              \r\n            </button>\r\n            <br /> <br />\r\n            <ul>\r\n              {this.state.list.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    {item.value}\r\n                    <button className=\"btn btn-floating\" onClick={() => this.deleteItem(item.id)}>\r\n                      \r\n                      <i className=\"fas fa-trash-alt\" aria-hidden=\"true\" />\r\n                    </button>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  export default Blog2;",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":11,"column":21,"nodeType":"43","endLine":15,"endColumn":23},{"ruleId":"44","severity":1,"message":"45","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":12},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]